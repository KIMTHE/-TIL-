name: deploy-toy-website-test
concurrency: toy-company

on: 
  push:
    branches: 
      - main

env:
  AZURE_RESOURCEGROUP_NAME: ToyWebsiteTest
  ENVIRONMENT_TYPE: Test

jobs:
  lint: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Bicep linter
      run: az bicep build --file deploy/main.bicep
  validate: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./deploy/main.bicep
        parameters: environmentType=${{ env.ENVIRONMENT_TYPE }}
        deploymentMode: Validate
  preview:
    runs-on: ubuntu-latest
    needs: [lint, validate]
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: Azure/cli@v1
      name: Run what-if
      with:
        inlineScript: |
            az deployment group what-if \
              --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} \
              --template-file deploy/main.bicep \
              --parameters environmentType=${{ env.ENVIRONMENT_TYPE }}
  deploy:
    runs-on: ubuntu-latest
    environment: Website # github의 'website' 환경에 대해 실행
    needs: preview
    outputs:
      appServiceAppHostName: ${{ steps.deploy.outputs.appServiceAppHostName }}
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/arm-deploy@v1
      id: deploy
      name: Deploy website
      with:
        failOnStdErr: false # 표준 오류(stderr) 로그 스트림을 무시
        deploymentName: ${{ github.run_number }} 
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./deploy/main.bicep
        parameters: environmentType=${{ env.ENVIRONMENT_TYPE }}
  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps: 
    - uses: actions/checkout@v2 
    # Pester를 사용하여 테스트를 실행하는 단계
    - run: |
        $container = New-PesterContainer `
          -Path 'deploy/Website.Tests.ps1' `
          -Data @{ HostName = '${{needs.deploy.outputs.appServiceAppHostName}}' }
        Invoke-Pester `
          -Container $container `
          -CI
      name: Run smoke tests
      shell: pwsh
